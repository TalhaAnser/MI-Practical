// An implementation of a Training Record as an ArrayList
package MI_Practical;




import java.util.*;


public class TrainingRecord {
    private List<Entry> tr;
    
    public TrainingRecord() {
        tr = new ArrayList<Entry>();
    } //constructor
    
    // add a record to the list
   public void addEntry(Entry e){
       tr.add(e);    
   } // addClass
   
   // look up the entry of a given day and month
   public String lookupEntry (int d, int m, int y) {
       ListIterator<Entry> iter = tr.listIterator();
       String result = "No entries found";
       while (iter.hasNext()) {
          Entry current = iter.next();
          if (current.getDay()==d && current.getMonth()==m && current.getYear()==y) 
             result = current.getEntry();
            }
       return result;
   } // lookupEntry
   public String lookupAllEntries(int d, int m, int y) {
    ListIterator<Entry> iter = tr.listIterator();
    String result = "";
    while (iter.hasNext()) {
        Entry current = iter.next();
        if (current.getDay() == d && current.getMonth() == m && current.getYear() == y) {
            result += current.getEntry() + "\n"; // add the current entry to the result string
        }
    }
    if (result.equals("")) {
        result = "No entries found";
    }
    return result;
}// lookupEntry
   
   // Count the number of entries
   public int getNumberOfEntries(){
       return tr.size();
   }
   // Clear all entries
   public void clearAllEntries(){
       tr.clear();
   }
  public String findAllByDate(int d, int m, int y) {
    StringBuilder sb = new StringBuilder();
    for (Entry e : tr) {
        if (e.getDay() == d && e.getMonth() == m && e.getYear() == y) {
            sb.append(e.toString()).append("\n");
        }
    }
    if (sb.length() == 0) {
        sb.append("No records found on "+d+"/"+m+"/"+y);
    }
    return sb.toString();
}
  public boolean removeEntry(Entry e) {
    return tr.remove(e);
}
    
   
} // TrainingRecord